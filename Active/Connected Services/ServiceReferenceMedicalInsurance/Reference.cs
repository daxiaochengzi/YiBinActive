//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BenDingActive.ServiceReferenceMedicalInsurance {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://10.162.129.76:7001/web/services/YbsiService", ConfigurationName="ServiceReferenceMedicalInsurance.YbsiService")]
    public interface YbsiService {
        
        // CODEGEN: 消息 callServiceRequest 的包装命名空间(http://service.yyjk.sinobest.cn)以后生成的消息协定与默认值(http://10.162.129.76:7001/web/services/YbsiService)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        BenDingActive.ServiceReferenceMedicalInsurance.callServiceResponse callService(BenDingActive.ServiceReferenceMedicalInsurance.callServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<BenDingActive.ServiceReferenceMedicalInsurance.callServiceResponse> callServiceAsync(BenDingActive.ServiceReferenceMedicalInsurance.callServiceRequest request);
        
        // CODEGEN: 消息 isUseCertSignRequest 的包装命名空间(http://service.yyjk.sinobest.cn)以后生成的消息协定与默认值(http://10.162.129.76:7001/web/services/YbsiService)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignResponse isUseCertSign(BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignResponse> isUseCertSignAsync(BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="callService", WrapperNamespace="http://service.yyjk.sinobest.cn", IsWrapped=true)]
    public partial class callServiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string inXml;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string operId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string operPsw;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string base64Cert;
        
        public callServiceRequest() {
        }
        
        public callServiceRequest(string sid, string inXml, string operId, string operPsw, string base64Cert) {
            this.sid = sid;
            this.inXml = inXml;
            this.operId = operId;
            this.operPsw = operPsw;
            this.base64Cert = base64Cert;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="callServiceResponse", WrapperNamespace="http://10.162.129.76:7001/web/services/YbsiService", IsWrapped=true)]
    public partial class callServiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string callServiceReturn;
        
        public callServiceResponse() {
        }
        
        public callServiceResponse(string callServiceReturn) {
            this.callServiceReturn = callServiceReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUseCertSign", WrapperNamespace="http://service.yyjk.sinobest.cn", IsWrapped=true)]
    public partial class isUseCertSignRequest {
        
        public isUseCertSignRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isUseCertSignResponse", WrapperNamespace="http://10.162.129.76:7001/web/services/YbsiService", IsWrapped=true)]
    public partial class isUseCertSignResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string isUseCertSignReturn;
        
        public isUseCertSignResponse() {
        }
        
        public isUseCertSignResponse(string isUseCertSignReturn) {
            this.isUseCertSignReturn = isUseCertSignReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface YbsiServiceChannel : BenDingActive.ServiceReferenceMedicalInsurance.YbsiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class YbsiServiceClient : System.ServiceModel.ClientBase<BenDingActive.ServiceReferenceMedicalInsurance.YbsiService>, BenDingActive.ServiceReferenceMedicalInsurance.YbsiService {
        
        public YbsiServiceClient() {
        }
        
        public YbsiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public YbsiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public YbsiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public YbsiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BenDingActive.ServiceReferenceMedicalInsurance.callServiceResponse BenDingActive.ServiceReferenceMedicalInsurance.YbsiService.callService(BenDingActive.ServiceReferenceMedicalInsurance.callServiceRequest request) {
            return base.Channel.callService(request);
        }
        
        public string callService(string sid, string inXml, string operId, string operPsw, string base64Cert) {
            BenDingActive.ServiceReferenceMedicalInsurance.callServiceRequest inValue = new BenDingActive.ServiceReferenceMedicalInsurance.callServiceRequest();
            inValue.sid = sid;
            inValue.inXml = inXml;
            inValue.operId = operId;
            inValue.operPsw = operPsw;
            inValue.base64Cert = base64Cert;
            BenDingActive.ServiceReferenceMedicalInsurance.callServiceResponse retVal = ((BenDingActive.ServiceReferenceMedicalInsurance.YbsiService)(this)).callService(inValue);
            return retVal.callServiceReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BenDingActive.ServiceReferenceMedicalInsurance.callServiceResponse> BenDingActive.ServiceReferenceMedicalInsurance.YbsiService.callServiceAsync(BenDingActive.ServiceReferenceMedicalInsurance.callServiceRequest request) {
            return base.Channel.callServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<BenDingActive.ServiceReferenceMedicalInsurance.callServiceResponse> callServiceAsync(string sid, string inXml, string operId, string operPsw, string base64Cert) {
            BenDingActive.ServiceReferenceMedicalInsurance.callServiceRequest inValue = new BenDingActive.ServiceReferenceMedicalInsurance.callServiceRequest();
            inValue.sid = sid;
            inValue.inXml = inXml;
            inValue.operId = operId;
            inValue.operPsw = operPsw;
            inValue.base64Cert = base64Cert;
            return ((BenDingActive.ServiceReferenceMedicalInsurance.YbsiService)(this)).callServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignResponse BenDingActive.ServiceReferenceMedicalInsurance.YbsiService.isUseCertSign(BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignRequest request) {
            return base.Channel.isUseCertSign(request);
        }
        
        public string isUseCertSign() {
            BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignRequest inValue = new BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignRequest();
            BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignResponse retVal = ((BenDingActive.ServiceReferenceMedicalInsurance.YbsiService)(this)).isUseCertSign(inValue);
            return retVal.isUseCertSignReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignResponse> BenDingActive.ServiceReferenceMedicalInsurance.YbsiService.isUseCertSignAsync(BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignRequest request) {
            return base.Channel.isUseCertSignAsync(request);
        }
        
        public System.Threading.Tasks.Task<BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignResponse> isUseCertSignAsync() {
            BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignRequest inValue = new BenDingActive.ServiceReferenceMedicalInsurance.isUseCertSignRequest();
            return ((BenDingActive.ServiceReferenceMedicalInsurance.YbsiService)(this)).isUseCertSignAsync(inValue);
        }
    }
}
